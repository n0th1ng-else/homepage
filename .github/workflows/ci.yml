name: Validate, Test, Build

on:
  workflow_call:
    inputs:
      docker-tag:
        type: string
        description: 'Extra docker tag'

jobs:
  version:
    runs-on: ubuntu-latest
    name: Fetch next version
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS using the obtained nvm version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: |
            args: [--frozen-lockfile]

      - name: Detect new version (and publish in main branch)
        run: pnpm run version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Read VERSION file
        env:
          COLOR_GREEN: "\x1b[32m"
          TEXT_BOLD: "\x1b[1m"
        id: version
        run: |
          APP_VER=$(cat .VERSION)
          echo "version=$APP_VER" >> $GITHUB_OUTPUT
          echo "${{ env.TEXT_BOLD }}Version: ${{ env.COLOR_GREEN }}$APP_VER"

  validate:
    runs-on: ubuntu-latest
    name: Validate the code
    strategy:
      matrix:
        cmd: [check, lint, 'format:check']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS using the obtained nvm version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: |
            args: [--frozen-lockfile]

      - name: Run ${{ matrix.cmd }}
        run: pnpm run ${{ matrix.cmd }}

  docker:
    runs-on: ubuntu-latest
    name: Push docker image
    needs: [version, validate]
    steps:
      - name: App version
        run: echo Picked the app version ${{ needs.version.outputs.version }}-${{ github.sha }}

      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup NodeJS using the obtained nvm version
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Registry
        if: inputs.docker-tag == ''
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}/${{ vars.DOCKER_IMAGE }}:${{ github.sha }}
          build-args: |
            APP_VERSION=${{ needs.version.outputs.version }}
            COMMIT_HASH=${{ github.sha }}
            GH_AUTHOR_LOGIN=${{ secrets.GH_AUTHOR_LOGIN }}
            GH_AUTHOR_LINKED_IN=${{ secrets.GH_AUTHOR_LINKED_IN }}
            GH_AUTHOR_TELEGRAM=${{ secrets.GH_AUTHOR_TELEGRAM }}
            GH_AUTHOR_MEDIUM=${{ secrets.GH_AUTHOR_MEDIUM }}
            GH_AUTHOR_HABR=${{ secrets.GH_AUTHOR_HABR }}
            GH_AUTHOR_NPM=${{ secrets.GH_AUTHOR_NPM }}
            GH_AUTHOR_TWITTER=${{ secrets.GH_AUTHOR_TWITTER }}
            GH_AUTHOR_DEVTO=${{ secrets.GH_AUTHOR_DEVTO }}

      - name: Publish to Registry
        if: inputs.docker-tag != ''
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}/${{ vars.DOCKER_IMAGE }}:${{ github.sha }}
            ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}/${{ vars.DOCKER_IMAGE }}:${{ inputs.docker-tag }}
          build-args: |
            APP_VERSION=${{ needs.version.outputs.version }}
            COMMIT_HASH=${{ github.sha }}
            GH_AUTHOR_LOGIN=${{ secrets.GH_AUTHOR_LOGIN }}
            GH_AUTHOR_LINKED_IN=${{ secrets.GH_AUTHOR_LINKED_IN }}
            GH_AUTHOR_TELEGRAM=${{ secrets.GH_AUTHOR_TELEGRAM }}
            GH_AUTHOR_MEDIUM=${{ secrets.GH_AUTHOR_MEDIUM }}
            GH_AUTHOR_HABR=${{ secrets.GH_AUTHOR_HABR }}
            GH_AUTHOR_NPM=${{ secrets.GH_AUTHOR_NPM }}
            GH_AUTHOR_TWITTER=${{ secrets.GH_AUTHOR_TWITTER }}
            GH_AUTHOR_DEVTO=${{ secrets.GH_AUTHOR_DEVTO }}
