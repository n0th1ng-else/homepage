{
  "version": 3,
  "file": "main.css",
  "sources": [
    "App.svelte",
    "BasicInfo.svelte",
    "ContactItem.svelte",
    "LinkItem.svelte",
    "Articles.svelte",
    "Contacts.svelte"
  ],
  "sourcesContent": [
    "<style lang=\"scss\">.app-page {\n  max-width: 52rem;\n  margin: 2rem auto; }\n\n.app-block {\n  margin: 0 1rem; }\n\n.with-space {\n  margin-bottom: 0.5rem; }\n</style>\n\n<script lang=\"ts\">import Tab, { Label } from '@smui/tab';\nimport TabBar from '@smui/tab-bar';\n;\nimport { push } from 'svelte-spa-router';\nimport { wrap } from 'svelte-spa-router/wrap';\nimport Router from 'svelte-spa-router';\nimport BlankComponent from '../routes/BlankComponent.svelte';\nimport News from '../routes/News.svelte';\nimport Contacts from '../routes/Contacts.svelte';\nimport Projects from '../routes/Projects.svelte';\nimport Articles from '../routes/Articles.svelte';\nimport Packages from '../routes/Packages.svelte';\nimport BasicInfo from './BasicInfo.svelte';\nimport { RoutePath, toPath } from '../routes';\nimport { getProfile } from '../helpers/global';\nimport { tabs, getTabById } from '../data/tabs';\nimport { sendPageView } from '../helpers/analytics';\nconst routes = {\n    [toPath(RoutePath.News)]: wrap({\n        component: News,\n        userData: { path: RoutePath.News }\n    }),\n    [toPath(RoutePath.Contacts)]: wrap({\n        component: Contacts,\n        userData: { path: RoutePath.Contacts }\n    }),\n    [toPath(RoutePath.Projects)]: wrap({\n        component: Projects,\n        userData: { path: RoutePath.Projects }\n    }),\n    [toPath(RoutePath.Articles)]: wrap({\n        component: Articles,\n        userData: { path: RoutePath.Articles }\n    }),\n    [toPath(RoutePath.Packages)]: wrap({\n        component: Packages,\n        userData: { path: RoutePath.Packages }\n    }),\n    [toPath()]: wrap({\n        component: BlankComponent,\n        userData: { path: RoutePath.Articles },\n        conditions: () => push(toPath(RoutePath.Articles)).then(() => true)\n    }),\n    [toPath(RoutePath.Other)]: wrap({\n        component: BlankComponent,\n        userData: { path: RoutePath.Articles },\n        conditions: () => push(toPath(RoutePath.Articles)).then(() => true)\n    })\n};\nlet activeTab = getTabById();\nlet tab;\nconst profile = getProfile();\nconst routeLoaded = event => {\n    const tabId = event.detail.userData.path;\n    activeTab = getTabById(tabId);\n    sendPageView();\n};\nconst selectTab = () => setTimeout(() => {\n    const tabId = activeTab.id;\n    push(toPath(tabId));\n});\n</script>\n\n<div class=\"app-page\">\n\t<div class=\"app-block\">\n\t\t<div class=\"with-space\">\n\t\t\t<BasicInfo profile=\"{profile}\" />\n\t\t</div>\n\t\t<div class=\"with-space\">\n\t\t\t<TabBar tabs=\"{tabs}\" bind:active=\"{activeTab}\" let:tab>\n\t\t\t\t<Tab tab=\"{tab}\" minWidth on:click=\"{selectTab}\">\n\t\t\t\t\t<Label>{tab.label}</Label>\n\t\t\t\t</Tab>\n\t\t\t</TabBar>\n\t\t</div>\n\t</div>\n\t<div class=\"app-block\">\n\t\t<Router routes=\"{routes}\" on:routeLoaded=\"{routeLoaded}\" />\n\t</div>\n</div>\n",
    "<style lang=\"scss\">.user-logo {\n  object-fit: cover;\n  border-radius: 50%; }\n  .user-logo.user-logo-big {\n    height: 13rem; }\n  .user-logo.user-logo-small {\n    height: 4rem;\n    margin-right: 1rem; }\n\n.link {\n  text-decoration-line: underline; }\n\n.with-padding {\n  margin: 0.25rem; }\n\n.aligned-with-tags {\n  margin-left: 0.5rem; }\n\n.hide-desktop-only {\n  display: block; }\n\n.show-desktop-only {\n  display: none; }\n\n@media (min-width: 52rem) {\n  .hide-desktop-only {\n    display: none; }\n  .show-desktop-only {\n    display: block; } }\n</style>\n\n<script lang=\"ts\">import Tags from './Tags.svelte';\nimport { labels } from '../labels';\n;\nimport { tags } from '../data/tags';\nexport let profile = {\n    author: null,\n    date: null,\n    description: null,\n    image: null,\n    logo: null,\n    publisher: null,\n    title: null,\n    url: null\n};\nconst getImage = (data) => {\n    if (data.image) {\n        return data.image;\n    }\n};\n</script>\n\n<div class=\"flex-container\">\n\t<div class=\"with-padding show-desktop-only\">\n\t\t<img src=\"{getImage(profile)}\" alt=\"Sergey's face\" class=\"user-logo user-logo-big\" />\n\t</div>\n\t<div class=\"with-padding\">\n\t\t<div class=\"flex-container aligned-with-tags\">\n\t\t\t<div class=\"with-padding hide-desktop-only\">\n\t\t\t\t<img src=\"{getImage(profile)}\" alt=\"Sergey's face\" class=\"user-logo user-logo-small\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div><span class=\"mdc-typography--headline4\">{labels.name}</span></div>\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"mdc-typography--subtitle1\">\n\t\t\t\t\t\tI am currently working at\n\t\t\t\t\t\t<a class=\"link\" href=\"https://setronica.com\" target=\"_blank\">Setronica.com</a>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"aligned-with-tags\">\n\t\t\t<div class=\"mdc-typography--subtitle1\">\n\t\t\t\tMy specialization is everything related to\n\t\t\t\t<b>Frontend</b>\n\t\t\t\tand\n\t\t\t\t<b>NodeJS</b>\n\t\t\t\tdevelopment\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"aligned-with-tags\">\n\t\t\t<div class=\"mdc-typography--subtitle2\">\n\t\t\t\tThese tags are very small piece of Javascript technologies I have experience with:\n\t\t\t</div>\n\t\t</div>\n\t\t<div>\n\t\t\t<Tags items=\"{tags}\" />\n\t\t</div>\n\t</div>\n</div>\n",
    "<style lang=\"scss\">.contact-icon {\n  font-size: 1.25rem;\n  position: relative;\n  top: 0.125rem; }\n\n.contact-image {\n  max-height: 1rem;\n  filter: brightness(0%);\n  margin-right: 0.25rem; }\n\n.title-size {\n  font-size: 1.5rem; }\n\n.contact-padded {\n  margin: 0.5rem; }\n\n.contact-container {\n  flex: 1 0 100%; }\n\n@media (min-width: 52rem) {\n  .contact-container {\n    flex: 0 0 25rem; } }\n</style>\n\n<script lang=\"ts\">import Card, { ActionButtons, ActionIcons, Actions as CardActions, Content as CardContent } from '@smui/card';\nimport IconButton from '@smui/icon-button';\nimport Dialog, { Actions as DialogActions, Content as DialogContent, Title } from '@smui/dialog';\nimport Button, { Label } from '@smui/button';\nimport { ContactType } from '../data/contact';\nimport { copyToClipboard } from '../helpers/clipboard';\nimport { getEmailLink, getGMapsLink } from '../helpers/links';\nexport let title = '';\nexport let sub = '';\nexport let icon = '';\nexport let image = '';\nexport let link = '';\nexport let type = ContactType.Url;\nlet dialog;\nlet copyError = null;\nconst openLink = (contactType, title, url) => {\n    const enrichedUrl = contactType === ContactType.Location ? getGMapsLink(title) : url;\n    if (!enrichedUrl) {\n        return;\n    }\n    const fullUrl = contactType === ContactType.Email ? getEmailLink(enrichedUrl) : enrichedUrl;\n    window.open(fullUrl, '_blank');\n};\nconst copyLink = (url) => {\n    if (!url || !dialog) {\n        return;\n    }\n    copyToClipboard(url)\n        .then(() => {\n        copyError = null;\n        dialog.open();\n    })\n        .catch(err => {\n        console.error(err);\n        copyError = err;\n        dialog.open();\n    });\n};\nconst closeDialog = () => {\n    copyError = null;\n    dialog.close();\n};\n</script>\n\n<div class=\"contact-container\">\n\t<div class=\"contact-padded\">\n\t\t<Card>\n\t\t\t<CardContent>\n\t\t\t\t{#if icon}<span class=\"material-icons contact-icon\">{icon}</span>{/if}\n\t\t\t\t{#if image}<img src=\"{image}\" class=\"contact-image\" alt=\"{title}\" />{/if}\n\t\t\t\t<span class=\"title-size\">{title}</span>\n\t\t\t\t<sub class=\"sub-size mdc-typography--overline\">{sub}</sub>\n\t\t\t</CardContent>\n\t\t\t<CardActions>\n\t\t\t\t<ActionButtons>\n\t\t\t\t\t<Button on:click=\"{() => openLink(type, title, link)}\">\n\t\t\t\t\t\t<Label>\n\t\t\t\t\t\t\t{#if type === ContactType.Email}\n\t\t\t\t\t\t\t\tWrite an email\n\t\t\t\t\t\t\t{:else if type === ContactType.Location}Show on maps{:else}Open{/if}\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t</Button>\n\t\t\t\t</ActionButtons>\n\t\t\t\t{#if link || type === ContactType.Location}\n\t\t\t\t\t<ActionIcons>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tclass=\"material-icons\"\n\t\t\t\t\t\t\ton:click=\"{() => copyLink(link || title)}\"\n\t\t\t\t\t\t\ttitle=\"Copy link\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tcontent_copy\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</ActionIcons>\n\t\t\t\t{/if}\n\t\t\t</CardActions>\n\t\t</Card>\n\n\t\t<Dialog bind:this=\"{dialog}\" aria-labelledby=\"dialog-title\" aria-describedby=\"dialog-content\">\n\t\t\t<Title id=\"dialog-title\">Copied to the clipboard</Title>\n\t\t\t<DialogContent id=\"dialog-content\">\n\t\t\t\t{#if copyError}\n\t\t\t\t\tUgh! Unable to copy the link...\n\t\t\t\t{:else if type === ContactType.Email}\n\t\t\t\t\tThe email\n\t\t\t\t\t<b>{link || title}</b>\n\t\t\t\t\thas been copied to the clipboard\n\t\t\t\t{:else if type === ContactType.Location}\n\t\t\t\t\tThe location\n\t\t\t\t\t<b>{link || title}</b>\n\t\t\t\t\thas been copied to the clipboard\n\t\t\t\t{:else}The link <b>{link || title}</b> has been copied to the clipboard{/if}\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button on:click=\"{() => closeDialog()}\">\n\t\t\t\t\t<Label>OK</Label>\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t</div>\n</div>\n",
    "<style lang=\"scss\">.flex-with-space {\n  flex: 1 1 auto;\n  justify-content: flex-end;\n  font-size: 1rem; }\n\n.pub-image {\n  width: 7rem; }\n\n.publication-card {\n  margin: 0.5rem 0.5rem 2rem 0.5rem; }\n\n.with-space {\n  margin-left: 0.5rem;\n  position: relative; }\n\n.shifted-icon {\n  position: absolute;\n  font-size: 1rem;\n  margin: 0.25rem 0 0 0.25rem; }\n</style>\n\n<script lang=\"ts\">import Paper, { Title, Content } from '@smui/paper';\n;\nimport { onMount, onDestroy } from 'svelte';\nimport { getRelativeDate } from '../helpers/date';\nexport let publication = {\n    service: '',\n    url: '',\n    lang: '',\n    fullUrl: '',\n    meta: {\n        author: null,\n        date: null,\n        description: null,\n        image: null,\n        logo: null,\n        publisher: null,\n        title: null,\n        url: null\n    }\n};\nlet pubDate;\nlet updater = 0;\nconst setDate = () => {\n    pubDate = getRelativeDate(publication.meta.date);\n};\nconst getImage = (data) => {\n    if (data.meta.image) {\n        return data.meta.image;\n    }\n};\nonMount(() => {\n    setDate();\n    updater = window.setInterval(() => setDate(), 1000);\n});\nonDestroy(() => {\n    if (updater) {\n        window.clearInterval(updater);\n    }\n});\n</script>\n\n<div class=\"publication-card\">\n\t<Paper elevation=\"3\">\n\t\t<Title>\n\t\t\t<div class=\"flex-container\">\n\t\t\t\t<div>\n\t\t\t\t\t<a href=\"{publication.fullUrl}\" target=\"_blank\" rel=\"noreferrer noopener\">\n\t\t\t\t\t\t<span class=\"mdc-typography--headline5\">{publication.meta.title}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"flex-container flex-with-space greyed\">\n\t\t\t\t\t<div>{pubDate}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Title>\n\t\t<Content>\n\t\t\t<div class=\"flex-container\">\n\t\t\t\t<div><img class=\"pub-image\" src=\"{getImage(publication)}\" alt=\"publication logo\" /></div>\n\t\t\t\t<div class=\"with-space\">\n\t\t\t\t\t<a href=\"{publication.fullUrl}\" target=\"_blank\" rel=\"noreferrer noopener\">\n\t\t\t\t\t\t<span class=\"mdc-typography--body1\">{publication.meta.description}</span>\n\t\t\t\t\t\t<i class=\"material-icons shifted-icon\">launch</i>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Content>\n\t</Paper>\n</div>\n",
    "<style lang=\"scss\">.flex-right {\n  margin: 0 0.5rem;\n  justify-content: flex-end; }\n</style>\n\n<script lang=\"ts\">;\nimport Switch from '@smui/switch';\nimport FormField from '@smui/form-field';\nimport LinkItem from '../components/LinkItem.svelte';\nimport { RoutePath } from '.';\nimport { getSortedList } from '../helpers/sort';\nimport { getPageTitle } from '../labels';\nimport { getArticles } from '../helpers/global';\nimport { Language } from '../data/language';\nlet selected = false;\nconst publications = getArticles();\nconst allPublications = getSortedList(publications);\nconst enPubs = getSortedList(publications.filter(pub => pub.lang === Language.En));\nconst getPublications = (isSelected) => isSelected ? [...allPublications] : [...enPubs];\nlet pubsToRender = getPublications(selected);\nconst updateList = () => {\n    pubsToRender = getPublications(selected);\n};\n</script>\n\n<svelte:head>\n\t<title>{getPageTitle(RoutePath.Articles)}</title>\n</svelte:head>\n\n<div>\n\t<div class=\"flex-container flex-right\">\n\t\t<div>\n\t\t\t<FormField align=\"end\">\n\t\t\t\t<Switch bind:checked=\"{selected}\" on:change=\"{updateList}\" />\n\t\t\t\t<span slot=\"label\">Show publications in Russian</span>\n\t\t\t</FormField>\n\t\t</div>\n\t</div>\n\t<div>\n\t\t{#each pubsToRender as pub (pub.fullUrl)}\n\t\t\t<LinkItem publication=\"{pub}\" />\n\t\t{/each}\n\t</div>\n</div>\n",
    "<style lang=\"scss\">.contacts-storage {\n  max-width: 50rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between; }\n</style>\n\n<script lang=\"ts\">;\nimport ContactItem from '../components/ContactItem.svelte';\nimport { RoutePath } from '.';\nimport { getPageTitle } from '../labels';\nimport { getAccounts } from '../helpers/global';\nimport { getEmailContact, getGitHubContact, getHabrContact, getLocationContact, getMediumContact, getTwitterContact } from '../helpers/contacts';\nconst accounts = getAccounts();\nconst email = getEmailContact();\nconst location = getLocationContact();\nconst twitter = getTwitterContact();\nconst medium = getMediumContact();\nconst github = getGitHubContact();\nconst habr = getHabrContact();\n</script>\n\n<svelte:head>\n\t<title>{getPageTitle(RoutePath.Contacts)}</title>\n</svelte:head>\n\n<div>\n\t<div>\n\t\t<div>\n\t\t\t<h2>Basic Info</h2>\n\t\t</div>\n\t\t<div class=\"contacts-storage\">\n\t\t\t<ContactItem\n\t\t\t\ttitle=\"{location.title}\"\n\t\t\t\tsub=\"{location.sub}\"\n\t\t\t\ttype=\"{location.type}\"\n\t\t\t\ticon=\"{location.icon}\"\n\t\t\t/>\n\t\t\t<ContactItem\n\t\t\t\ttitle=\"{email.title}\"\n\t\t\t\tlink=\"{email.link}\"\n\t\t\t\ttype=\"{email.type}\"\n\t\t\t\ticon=\"{email.icon}\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n\n\t<div>\n\t\t<div>\n\t\t\t<h2>Networks</h2>\n\t\t</div>\n\t\t<div class=\"contacts-storage\">\n\t\t\t<ContactItem title=\"{github.title}\" link=\"{github.link}\" image=\"{github.image}\" />\n\t\t\t<ContactItem title=\"{medium.title}\" link=\"{medium.link}\" image=\"{medium.image}\" />\n\t\t\t<ContactItem title=\"{twitter.title}\" link=\"{twitter.link}\" image=\"{twitter.image}\" />\n\t\t\t<ContactItem title=\"{habr.title}\" link=\"{habr.link}\" image=\"{habr.image}\" />\n\t\t</div>\n\t</div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAAmB,SAAS,eAAC,CAAC,AAC5B,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,IAAI,CAAC,IAAI,AAAE,CAAC,AAEtB,UAAU,eAAC,CAAC,AACV,MAAM,CAAE,CAAC,CAAC,IAAI,AAAE,CAAC,AAEnB,WAAW,eAAC,CAAC,AACX,aAAa,CAAE,MAAM,AAAE,CAAC;ACRP,UAAU,cAAC,CAAC,AAC7B,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,AAAE,CAAC,AACrB,UAAU,cAAc,cAAC,CAAC,AACxB,MAAM,CAAE,KAAK,AAAE,CAAC,AAClB,UAAU,gBAAgB,cAAC,CAAC,AAC1B,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,IAAI,AAAE,CAAC,AAEzB,KAAK,cAAC,CAAC,AACL,oBAAoB,CAAE,SAAS,AAAE,CAAC,AAEpC,aAAa,cAAC,CAAC,AACb,MAAM,CAAE,OAAO,AAAE,CAAC,AAEpB,kBAAkB,cAAC,CAAC,AAClB,WAAW,CAAE,MAAM,AAAE,CAAC,AAExB,kBAAkB,cAAC,CAAC,AAClB,OAAO,CAAE,KAAK,AAAE,CAAC,AAEnB,kBAAkB,cAAC,CAAC,AAClB,OAAO,CAAE,IAAI,AAAE,CAAC,AAElB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,kBAAkB,cAAC,CAAC,AAClB,OAAO,CAAE,IAAI,AAAE,CAAC,AAClB,kBAAkB,cAAC,CAAC,AAClB,OAAO,CAAE,KAAK,AAAE,CAAC,AAAC,CAAC;AC5BJ,aAAa,cAAC,CAAC,AAChC,SAAS,CAAE,OAAO,CAClB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,QAAQ,AAAE,CAAC,AAElB,cAAc,cAAC,CAAC,AACd,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,WAAW,EAAE,CAAC,CACtB,YAAY,CAAE,OAAO,AAAE,CAAC,AAE1B,WAAW,cAAC,CAAC,AACX,SAAS,CAAE,MAAM,AAAE,CAAC,AAEtB,eAAe,cAAC,CAAC,AACf,MAAM,CAAE,MAAM,AAAE,CAAC,AAEnB,kBAAkB,cAAC,CAAC,AAClB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,AAAE,CAAC,AAEnB,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,kBAAkB,cAAC,CAAC,AAClB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,AAAE,CAAC,AAAC,CAAC;ACrBL,gBAAgB,eAAC,CAAC,AACnC,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,eAAe,CAAE,QAAQ,CACzB,SAAS,CAAE,IAAI,AAAE,CAAC,AAEpB,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,IAAI,AAAE,CAAC,AAEhB,iBAAiB,eAAC,CAAC,AACjB,MAAM,CAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,AAAE,CAAC,AAEtC,WAAW,eAAC,CAAC,AACX,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,QAAQ,AAAE,CAAC,AAEvB,aAAa,eAAC,CAAC,AACb,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,AAAE,CAAC;AClBb,WAAW,eAAC,CAAC,AAC9B,MAAM,CAAE,CAAC,CAAC,MAAM,CAChB,eAAe,CAAE,QAAQ,AAAE,CAAC;ACFX,iBAAiB,cAAC,CAAC,AACpC,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,eAAe,CAAE,aAAa,AAAE,CAAC"
}