{
  "version": 3,
  "file": "main.css",
  "sources": [
    "App.svelte",
    "BasicInfo.svelte",
    "LinkItem.svelte",
    "Publication.svelte"
  ],
  "sourcesContent": [
    "<style lang=\"scss\">.app-page {\n  max-width: 1000px;\n  margin: auto; }\n\n.with-space {\n  margin-bottom: 10px; }\n</style>\n\n<script lang=\"ts\">import { push } from 'svelte-spa-router';\nimport { wrap } from 'svelte-spa-router/wrap';\nimport Router from 'svelte-spa-router';\nimport BlankComponent from '../routes/BlankComponent.svelte';\nimport Chronic from '../routes/Chronic.svelte';\nimport Contact from '../routes/Contact.svelte';\nimport Info from '../routes/Info.svelte';\nimport Publication from '../routes/Publication.svelte';\nimport Package from '../routes/Package.svelte';\nimport { RoutePath, toPath } from '../routes';\nimport Tab, { Label } from '@smui/tab';\nimport TabBar from '@smui/tab-bar';\nimport BasicInfo from './BasicInfo.svelte';\nimport { labels } from '../labels';\nconst routes = {\n    [toPath(RoutePath.Chronic)]: wrap({\n        component: Chronic,\n        userData: { path: RoutePath.Chronic }\n    }),\n    [toPath(RoutePath.Contact)]: wrap({\n        component: Contact,\n        userData: { path: RoutePath.Contact }\n    }),\n    [toPath(RoutePath.Info)]: wrap({ component: Info, userData: { path: RoutePath.Info } }),\n    [toPath(RoutePath.Publication)]: wrap({\n        component: Publication,\n        userData: { path: RoutePath.Publication }\n    }),\n    [toPath(RoutePath.Package)]: wrap({\n        component: Package,\n        userData: { path: RoutePath.Package }\n    }),\n    [toPath()]: wrap({\n        component: BlankComponent,\n        userData: { path: RoutePath.Info },\n        conditions: () => push(toPath(RoutePath.Info)).then(() => true)\n    }),\n    [toPath(RoutePath.Other)]: wrap({\n        component: BlankComponent,\n        userData: { path: RoutePath.Info },\n        conditions: () => push(toPath(RoutePath.Info)).then(() => true)\n    })\n};\nconst tabs = [\n    {\n        label: labels.tabs[RoutePath.Chronic],\n        id: RoutePath.Chronic\n    },\n    {\n        label: labels.tabs[RoutePath.Contact],\n        id: RoutePath.Contact\n    },\n    {\n        label: labels.tabs[RoutePath.Info],\n        id: RoutePath.Info\n    },\n    {\n        label: labels.tabs[RoutePath.Publication],\n        id: RoutePath.Publication\n    },\n    {\n        label: labels.tabs[RoutePath.Package],\n        id: RoutePath.Package\n    }\n];\nlet activeTab = tabs[0];\nlet tab;\nconst profile = runtime.meta.profile;\nconst routeLoaded = event => {\n    const id = event.detail.userData.path;\n    const routeTab = tabs.find(tab => tab.id === id);\n    if (routeTab) {\n        activeTab = routeTab;\n    }\n};\nconst selectTab = () => setTimeout(() => {\n    const id = activeTab.id;\n    push(toPath(id));\n});\n</script>\n\n<div class=\"app-page\">\n\t<div>\n\t\t<div class=\"with-space\">\n\t\t\t<BasicInfo profile=\"{profile}\" />\n\t\t</div>\n\t\t<div class=\"padded-block\">\n\t\t\t<TabBar tabs=\"{tabs}\" bind:active=\"{activeTab}\" let:tab>\n\t\t\t\t<Tab tab=\"{tab}\" minWidth on:click=\"{selectTab}\">\n\t\t\t\t\t<Label>{tab.label}</Label>\n\t\t\t\t</Tab>\n\t\t\t</TabBar>\n\t\t</div>\n\t</div>\n\t<div class=\"padded-block\">\n\t\t<Router routes=\"{routes}\" on:routeLoaded=\"{routeLoaded}\" />\n\t</div>\n</div>\n",
    "<style lang=\"scss\">.user-logo {\n  height: 200px; }\n\n.link {\n  text-decoration-line: underline; }\n\n.with-padding {\n  padding-top: 5px; }\n</style>\n\n<script lang=\"ts\">import { labels } from '../labels';\nimport Tags from './Tags.svelte';\n;\nexport let profile = {\n    author: null,\n    date: null,\n    description: null,\n    image: null,\n    logo: null,\n    publisher: null,\n    title: null,\n    url: null\n};\nconst getImage = (data) => {\n    if (data.image) {\n        return data.image;\n    }\n};\n</script>\n\n<div class=\"flex-container\">\n\t<div class=\"padded-block\">\n\t\t<img src=\"{getImage(profile)}\" alt=\"Sergey's face\" class=\"user-logo\" />\n\t</div>\n\t<div class=\"padded-block\">\n\t\t<div><span class=\"mdc-typography--headline4\">{labels.name}</span></div>\n\t\t<div>\n\t\t\t<span class=\"mdc-typography--subtitle1\">\n\t\t\t\tI am working at\n\t\t\t\t<a class=\"link\" href=\"https://setronica.com\" target=\"_blank\"> Setronica.com </a>\n\t\t\t</span>\n\t\t</div>\n\t\t<div>\n\t\t\t<div class=\"mdc-typography--subtitle1\">\n\t\t\t\tMy specialization is everything related to\n\t\t\t\t<b>Frontend</b>\n\t\t\t\tand\n\t\t\t\t<b>NodeJS</b>\n\t\t\t\tdevelopment\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"with-padding\">\n\t\t\t<div class=\"mdc-typography--subtitle2\">\n\t\t\t\tThese tags are very small piece of Javascript technologies I have experience with:\n\t\t\t</div>\n\t\t</div>\n\t\t<div>\n\t\t\t<Tags />\n\t\t</div>\n\t</div>\n</div>\n",
    "<style lang=\"scss\">.flex-with-space {\n  flex: 1 1 auto;\n  justify-content: flex-end;\n  font-size: 1rem; }\n\n.pub-image {\n  width: 100px; }\n\n.publication-card {\n  margin: 10px 10px 30px 10px; }\n\n.with-space {\n  margin-left: 10px; }\n</style>\n\n<script lang=\"ts\">import { onMount, onDestroy } from 'svelte';\nimport Paper, { Title, Content } from '@smui/paper';\nimport { formatDistance } from 'date-fns';\n;\nexport let publication = {\n    service: '',\n    url: '',\n    lang: '',\n    fullUrl: '',\n    meta: {\n        author: null,\n        date: null,\n        description: null,\n        image: null,\n        logo: null,\n        publisher: null,\n        title: null,\n        url: null\n    }\n};\nlet pubDate;\nlet updater;\nfunction setDate() {\n    pubDate =\n        publication.meta.date &&\n            formatDistance(new Date(publication.meta.date), new Date(), { addSuffix: true });\n}\nconst getImage = (data) => {\n    if (data.meta.image) {\n        return data.meta.image;\n    }\n};\nonMount(() => {\n    setDate();\n    updater = setInterval(() => setDate(), 1000);\n});\nonDestroy(() => {\n    if (updater) {\n        clearInterval(updater);\n    }\n});\n</script>\n\n<div class=\"publication-card\">\n\t<Paper elevation=\"3\">\n\t\t<Title>\n\t\t\t<div class=\"flex-container\">\n\t\t\t\t<div>\n\t\t\t\t\t<a href=\"{publication.fullUrl}\" target=\"_blank\" rel=\"noreferrer noopener\">\n\t\t\t\t\t\t<span class=\"mdc-typography--headline5\">{publication.meta.title}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"flex-container flex-with-space greyed\">\n\t\t\t\t\t<div>{pubDate}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Title>\n\t\t<Content>\n\t\t\t<div class=\"flex-container\">\n\t\t\t\t<div><img class=\"pub-image\" src=\"{getImage(publication)}\" alt=\"publication logo\" /></div>\n\t\t\t\t<div class=\"with-space\">\n\t\t\t\t\t<a href=\"{publication.fullUrl}\" target=\"_blank\" rel=\"noreferrer noopener\">\n\t\t\t\t\t\t<span class=\"mdc-typography--body1\">{publication.meta.description}</span>\n\t\t\t\t\t\t<i class=\"fas fa-external-link-alt\"></i>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Content>\n\t</Paper>\n</div>\n",
    "<style lang=\"scss\">.flex-right {\n  margin: 0 10px;\n  justify-content: flex-end; }\n</style>\n\n<script lang=\"ts\">import Switch from '@smui/switch';\nimport FormField from '@smui/form-field';\nimport LinkItem from '../components/LinkItem.svelte';\nimport { getSortedList } from '../helpers/sort';\nimport { getPageTitle } from '../labels';\nimport { RoutePath } from '.';\nlet selected = false;\nconst allPublications = getSortedList(runtime.meta.publications);\nconst enPubs = getSortedList(runtime.meta.publications.filter(pub => pub.lang === 'en'));\nfunction getPublications(isSelected) {\n    return isSelected ? [...allPublications] : [...enPubs];\n}\nlet pubsToRender = getPublications(selected);\nfunction updateList() {\n    pubsToRender = getPublications(selected);\n}\n</script>\n\n<svelte:head>\n\t<title>{getPageTitle(RoutePath.Publication)}</title>\n</svelte:head>\n\n<div>\n\t<div class=\"flex-container flex-right\">\n\t\t<div>\n\t\t\t<FormField align=\"end\">\n\t\t\t\t<Switch bind:checked=\"{selected}\" on:change=\"{updateList}\" />\n\t\t\t\t<span slot=\"label\">Show publications in Russian</span>\n\t\t\t</FormField>\n\t\t</div>\n\t</div>\n\t<div>\n\t\t{#each pubsToRender as pub (pub.fullUrl)}\n\t\t\t<LinkItem publication=\"{pub}\" />\n\t\t{/each}\n\t</div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAAmB,SAAS,aAAC,CAAC,AAC5B,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,IAAI,AAAE,CAAC,AAEjB,WAAW,aAAC,CAAC,AACX,aAAa,CAAE,IAAI,AAAE,CAAC;ACLL,UAAU,eAAC,CAAC,AAC7B,MAAM,CAAE,KAAK,AAAE,CAAC,AAElB,KAAK,eAAC,CAAC,AACL,oBAAoB,CAAE,SAAS,AAAE,CAAC,AAEpC,aAAa,eAAC,CAAC,AACb,WAAW,CAAE,GAAG,AAAE,CAAC;ACPF,gBAAgB,eAAC,CAAC,AACnC,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,eAAe,CAAE,QAAQ,CACzB,SAAS,CAAE,IAAI,AAAE,CAAC,AAEpB,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,KAAK,AAAE,CAAC,AAEjB,iBAAiB,eAAC,CAAC,AACjB,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,AAAE,CAAC,AAEhC,WAAW,eAAC,CAAC,AACX,WAAW,CAAE,IAAI,AAAE,CAAC;ACZH,WAAW,cAAC,CAAC,AAC9B,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,eAAe,CAAE,QAAQ,AAAE,CAAC"
}